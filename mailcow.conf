# ------------------------------
# mailcow web ui configuration
# ------------------------------
# example.org is _not_ a valid hostname, use a fqdn here.
# Default admin user is "admin"
# Default password is "moohoo"
MAILCOW_HOSTNAME=ENC[AES256_GCM,data:XTWQ5IOBPqD67V0KnzmbWw==,iv:bVJJnJhY99/wKfjKsgsQWXY9A5Pa6ba7oy9ZHfr6nbs=,tag:oGqf2O1UGm8K9GtpSSP9KA==,type:str]
# Password hash algorithm
# Only certain password hash algorithm are supported. For a fully list of supported schemes,
# see https://docs.mailcow.email/models/model-passwd/
MAILCOW_PASS_SCHEME=ENC[AES256_GCM,data:JCxjgf1oVlg7,iv:vVgwmOb2zV+L95u0mMWH2s8yb4VxTITTdZI0mqZk84s=,tag:yePCOK0aCCl1+mhA2xzCAA==,type:str]
# ------------------------------
# SQL database configuration
# ------------------------------
DBNAME=ENC[AES256_GCM,data:WTMGRB2z/w==,iv:ZLwTAud3uAhYNUKy6qN5MsNEJvsNHbQKeZWc/iXU9o8=,tag:rvNq8uwwg8juzwr3ZQXO/w==,type:str]
DBUSER=ENC[AES256_GCM,data:Emmw4i0oog==,iv:Prs6Cta++EhJOjRuDC5AxIrJF/EVzXgQxqWwFgl6YqU=,tag:0YzWJ8HCaOd//NVR6ArIpA==,type:str]
# Please use long, random alphanumeric strings (A-Za-z0-9)
DBPASS=ENC[AES256_GCM,data:g5IhQvgSvkvrh1zIGmpR6i/nxZiLm5bXo4jGWIw0/3s=,iv:OIlv9WoErsEAOhILLXS+G1SdAVPDxtD+imBCTorHPag=,tag:RsMKpD4RJxKcX16sAhFRRw==,type:str]
DBROOT=ENC[AES256_GCM,data:wFFZw0BTcHUig2FNP7MsD3KTjGxyU1RoTDI6vKZoEo4=,iv:QJoBCx1X6h5mSjqjOo+xt37QdtgHPx1PbnWqrDcesHE=,tag:ioyEESAA3tre6dkNg62fFQ==,type:str]
# ------------------------------
# REDIS configuration
# ------------------------------
REDISPASS=ENC[AES256_GCM,data:Cw1X25OJ3RrLfn0DAlmr0T6/tcx7b80YN63u+gd317E=,iv:xqNZB5OSYWBgiBV/JWT9Qs8khU6znxLjmVWOA2A6R5k=,tag:GGhVpc+HfVPbSeLjU+osiA==,type:str]
# ------------------------------
# HTTP/S Bindings
# ------------------------------
# You should use HTTPS, but in case of SSL offloaded reverse proxies:
# Might be important: This will also change the binding within the container.
# If you use a proxy within Docker, point it to the ports you set below.
# Do _not_ use IP:PORT in HTTP(S)_BIND or HTTP(S)_PORT
# IMPORTANT: Do not use port 8081, 9081 or 65510!
# Example: HTTP_BIND=1.2.3.4
# For IPv4 leave it as it is: HTTP_BIND= & HTTPS_PORT=
# For IPv6 see https://docs.mailcow.email/post_installation/firststeps-ip_bindings/
HTTP_PORT=180
HTTP_BIND=127.0.0.1
HTTPS_PORT=1443
HTTPS_BIND=127.0.0.1
CADDY_BIND=0.0.0.0
CADDY_HTTP_PORT=80
CADDY_HTTPS_PORT=443
# ------------------------------
# Other bindings
# ------------------------------
# You should leave that alone
# Format: 11.22.33.44:25 or 12.34.56.78:465 etc.
SMTP_PORT=25
SMTPS_PORT=465
SUBMISSION_PORT=587
IMAP_PORT=143
IMAPS_PORT=993
POP_PORT=110
POPS_PORT=995
SIEVE_PORT=4190
DOVEADM_PORT=127.0.0.1:19991
SQL_PORT=127.0.0.1:13306
REDIS_PORT=127.0.0.1:7654
# Your timezone
# See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones for a list of timezones
# Use the column named 'TZ identifier' + pay attention for the column named 'Notes'
TZ=Etc/UTC
# Fixed project name
# Please use lowercase letters only
COMPOSE_PROJECT_NAME=ENC[AES256_GCM,data:V79FC0xu0bC4Errd/heXPIc=,iv:cZsxvp6xy5WEaM+zy91HjKPmSFvsbZsv3wjYOFAHT58=,tag:FCxdAyIUz0jvszI9GsnK+A==,type:str]
# Used Docker Compose version
# Switch here between native (compose plugin) and standalone
# For more informations take a look at the mailcow docs regarding the configuration options.
# Normally this should be untouched but if you decided to use either of those you can switch it manually here.
# Please be aware that at least one of those variants should be installed on your machine or mailcow will fail.
DOCKER_COMPOSE_VERSION=native
# Set this to "allow" to enable the anyone pseudo user. Disabled by default.
# When enabled, ACL can be created, that apply to "All authenticated users"
# This should probably only be activated on mail hosts, that are used exclusivly by one organisation.
# Otherwise a user might share data with too many other users.
ACL_ANYONE=disallow
# Garbage collector cleanup
# Deleted domains and mailboxes are moved to /var/vmail/_garbage/timestamp_sanitizedstring
# How long should objects remain in the garbage until they are being deleted? (value in minutes)
# Check interval is hourly
MAILDIR_GC_TIME=7200
# Additional SAN for the certificate
#
# You can use wildcard records to create specific names for every domain you add to mailcow.
# Example: Add domains "example.com" and "example.net" to mailcow, change ADDITIONAL_SAN to a value like:
#ADDITIONAL_SAN=imap.*,smtp.*
# This will expand the certificate to "imap.example.com", "smtp.example.com", "imap.example.net", "smtp.example.net"
# plus every domain you add in the future.
#
# You can also just add static names...
#ADDITIONAL_SAN=srv1.example.net
# ...or combine wildcard and static names:
#ADDITIONAL_SAN=imap.*,srv1.example.com
#
ADDITIONAL_SAN=imap.*,smtp.*,mail.*
# Obtain certificates for autodiscover.* and autoconfig.* domains.
# This can be useful to switch off in case you are in a scenario where a reverse proxy already handles those.
# There are mixed scenarios where ports 80,443 are occupied and you do not want to share certs
# between services. So acme-mailcow obtains for maildomains and all web-things get handled
# in the reverse proxy.
AUTODISCOVER_SAN=y
# Additional server names for mailcow UI
#
# Specify alternative addresses for the mailcow UI to respond to
# This is useful when you set mail.* as ADDITIONAL_SAN and want to make sure mail.maildomain.com will always point to the mailcow UI.
# If the server name does not match a known site, Nginx decides by best-guess and may redirect users to the wrong web root.
# You can understand this as server_name directive in Nginx.
# Comma separated list without spaces! Example: ADDITIONAL_SERVER_NAMES=a.b.c,d.e.f
ADDITIONAL_SERVER_NAMES=ENC[AES256_GCM,data:g7fqmSNzAVHl3xy5Z+26Aw==,iv:PqOLnoY72vFeKzUYkyRDY/wFile/66NaHWTpvcnqKkU=,tag:8NTsKqgvvZBx1IPGOKfdMw==,type:str]
# Skip running ACME (acme-mailcow, Let's Encrypt certs) - y/n
SKIP_LETS_ENCRYPT=y
# Create seperate certificates for all domains - y/n
# this will allow adding more than 100 domains, but some email clients will not be able to connect with alternative hostnames
# see https://doc.dovecot.org/admin_manual/ssl/sni_support
ENABLE_SSL_SNI=n
# Skip IPv4 check in ACME container - y/n
SKIP_IP_CHECK=n
# Skip HTTP verification in ACME container - y/n
SKIP_HTTP_VERIFICATION=n
# Skip Unbound (DNS Resolver) Healthchecks (NOT Recommended!) - y/n
SKIP_UNBOUND_HEALTHCHECK=n
# Skip ClamAV (clamd-mailcow) anti-virus (Rspamd will auto-detect a missing ClamAV container) - y/n
SKIP_CLAMD=n
# Skip SOGo: Will disable SOGo integration and therefore webmail, DAV protocols and ActiveSync support (experimental, unsupported, not fully implemented) - y/n
SKIP_SOGO=n
# Skip FTS (Fulltext Search) for Dovecot on low-memory, low-threaded systems or if you simply want to disable it.
# Dovecot inside mailcow use Flatcurve as FTS Backend.
SKIP_FTS=n
# Dovecot Indexing (FTS) Process maximum heap size in MB, there is no recommendation, please see Dovecot docs.
# Flatcurve (Xapian backend) is used as the FTS Indexer. It is supposed to be efficient in CPU and RAM consumption.
# However: Please always monitor your Resource consumption!
FTS_HEAP=128
# Controls how many processes the Dovecot indexing process can spawn at max.
# Too many indexing processes can use a lot of CPU and Disk I/O.
# Please visit: https://doc.dovecot.org/configuration_manual/service_configuration/#indexer-worker for more informations
FTS_PROCS=1
# Allow admins to log into SOGo as email user (without any password)
ALLOW_ADMIN_EMAIL_LOGIN=ENC[AES256_GCM,data:Ew==,iv:2noKPJG6zeGU5GlaRoajtMIbTpUo3OkFLnqTwgPpvHc=,tag:9SlpKdvO9tQgGkMf2p2qQw==,type:str]
# Enable watchdog (watchdog-mailcow) to restart unhealthy containers
USE_WATCHDOG=y
# Send watchdog notifications by mail (sent from watchdog@MAILCOW_HOSTNAME)
# CAUTION:
# 1. You should use external recipients
# 2. Mails are sent unsigned (no DKIM)
# 3. If you use DMARC, create a separate DMARC policy ("v=DMARC1; p=none;" in _dmarc.MAILCOW_HOSTNAME)
# Multiple rcpts allowed, NO quotation marks, NO spaces
#WATCHDOG_NOTIFY_EMAIL=a@example.com,b@example.com,c@example.com
WATCHDOG_NOTIFY_EMAIL=ENC[AES256_GCM,data:VPzuHd7UG8dVU19woQlGCiU1zHI=,iv:jIdJ1KrUa/4uKrYf6e4tA3y4qGWrXTwZM7tuJYythzo=,tag:UCXZVgFkcG/GiJra4QDoTQ==,type:str]
# Send notifications to a webhook URL that receives a POST request with the content type "application/json".
# You can use this to send notifications to services like Discord, Slack and others.
#WATCHDOG_NOTIFY_WEBHOOK=https://discord.com/api/webhooks/XXXXXXXXXXXXXXXXXXX/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
# JSON body included in the webhook POST request. Needs to be in single quotes.
# Following variables are available: SUBJECT, BODY
#WATCHDOG_NOTIFY_WEBHOOK_BODY='{"username": "mailcow Watchdog", "content": "****\n"}'
# Notify about banned IP (includes whois lookup)
WATCHDOG_NOTIFY_BAN=n
# Send a notification when the watchdog is started.
WATCHDOG_NOTIFY_START=y
# Subject for watchdog mails. Defaults to "Watchdog ALERT" followed by the error message.
#WATCHDOG_SUBJECT=
# Checks if mailcow is an open relay. Requires a SAL. More checks will follow.
# https://www.servercow.de/mailcow?lang=en
# https://www.servercow.de/mailcow?lang=de
# No data is collected. Opt-in and anonymous.
# Will only work with unmodified mailcow setups.
WATCHDOG_EXTERNAL_CHECKS=n
# Enable watchdog verbose logging
WATCHDOG_VERBOSE=n
# Max log lines per service to keep in Redis logs
LOG_LINES=9999
# Internal IPv4 /24 subnet, format n.n.n (expands to n.n.n.0/24)
# Use private IPv4 addresses only, see https://en.wikipedia.org/wiki/Private_network#Private_IPv4_addresses
IPV4_NETWORK=172.22.1
# Internal IPv6 subnet in fc00::/7
# Use private IPv6 addresses only, see https://en.wikipedia.org/wiki/Private_network#Private_IPv6_addresses
IPV6_NETWORK=fd4d:6169:6c63:6f77::/64
# Use this IPv4 for outgoing connections (SNAT)
#SNAT_TO_SOURCE=
# Use this IPv6 for outgoing connections (SNAT)
#SNAT6_TO_SOURCE=
# Create or override an API key for the web UI
# You _must_ define API_ALLOW_FROM, which is a comma separated list of IPs
# An API key defined as API_KEY has read-write access
# An API key defined as API_KEY_READ_ONLY has read-only access
# Allowed chars for API_KEY and API_KEY_READ_ONLY: a-z, A-Z, 0-9, -
# You can define API_KEY and/or API_KEY_READ_ONLY
#API_KEY=
#API_KEY_READ_ONLY=
#API_ALLOW_FROM=172.22.1.1,127.0.0.1
# mail_home is ~/Maildir
MAILDIR_SUB=Maildir
# SOGo session timeout in minutes
SOGO_EXPIRE_SESSION=480
# DOVECOT_MASTER_USER and DOVECOT_MASTER_PASS must both be provided. No special chars.
# Empty by default to auto-generate master user and password on start.
# User expands to DOVECOT_MASTER_USER@mailcow.local
# LEAVE EMPTY IF UNSURE
DOVECOT_MASTER_USER=
# LEAVE EMPTY IF UNSURE
DOVECOT_MASTER_PASS=
# Let's Encrypt registration contact information
# Optional: Leave empty for none
# This value is only used on first order!
# Setting it at a later point will require the following steps:
# https://docs.mailcow.email/troubleshooting/debug-reset_tls/
ACME_CONTACT=ENC[AES256_GCM,data:IPLihQeyxDOop1NAXePP1w==,iv:3w2hu1pB5h5TuMWVNHC415vmfFfBGOXMvx+j+ic63BQ=,tag:MubYZvU4FMxBUO6qHrGcpA==,type:str]
# WebAuthn device manufacturer verification
# After setting WEBAUTHN_ONLY_TRUSTED_VENDORS=y only devices from trusted manufacturers are allowed
# root certificates can be placed for validation under mailcow-dockerized/data/web/inc/lib/WebAuthn/rootCertificates
WEBAUTHN_ONLY_TRUSTED_VENDORS=n
# Spamhaus Data Query Service Key
# Optional: Leave empty for none
# Enter your key here if you are using a blocked ASN (OVH, AWS, Cloudflare e.g) for the unregistered Spamhaus Blocklist.
# If empty, it will completely disable Spamhaus blocklists if it detects that you are running on a server using a blocked AS.
# Otherwise it will work normally.
SPAMHAUS_DQS_KEY=
# Prevent netfilter from setting an iptables/nftables rule to isolate the mailcow docker network - y/n
# CAUTION: Disabling this may expose container ports to other neighbors on the same subnet, even if the ports are bound to localhost
DISABLE_NETFILTER_ISOLATION_RULE=n
BORG_PASSPHRASE=ENC[AES256_GCM,data:CD1nPpP5fguFoqZQGY3uBD8EL8Yz0HsllhgoaNGuLdIICsqt5xgY++M=,iv:6Nd13ieHN4F1/IJG8cra0NneztBFNIh0YIgwIRHCG9U=,tag:waEVztgYU654rMatveEFbQ==,type:str]
HYPERKITTY_API_KEY=ENC[AES256_GCM,data:/QFpJYYA8crQEBLdgKOThLT6bW1CJ50QI9Qp2P5e,iv:X7XMguzFyCSqqcaJZ2kbmWGRbnUYgUR0ScTWkVOOB4A=,tag:Jqdiew4YpDON7EMMubpNtQ==,type:str]
DJANGO_KEY=ENC[AES256_GCM,data:eLvxfZ37GPpFbRttB+f/zaY2ydDL6dVZ1hlH/Sba,iv:lEtDsPDY2InSKWaRl4FRIWmA1Rwy3PD2n8bUAUzXcGQ=,tag:CA4h2PAR9RBBTrPycojAHA==,type:str]
MAILMAN_DB_NAME=ENC[AES256_GCM,data:lgrVQXEdGwCO,iv:8lZaEAbH9kTIGsxXEOrR7uDqjrc1gisvgl2HU0RfdgQ=,tag:D4VYtU+7GdIwUAifz/pPWg==,type:str]
MAILMAN_DB_USER=ENC[AES256_GCM,data:+Tv6CJlzufilgw==,iv:XVplC/8lnjHsx7RQeE5uL15X7J1n32rxMD1jRHFyYNM=,tag:LUUpULot3sZ3VKsQ2kYpxg==,type:str]
MAILMAN_DB_PASS=ENC[AES256_GCM,data:AOWOgeJ9woNbrvmhNDV3UEQ4yVD12MAi4oXyicJ0,iv:MZ/Y6yegacTVQvXqQVieWkD03dOVkl2Qznlz+1Rbxb0=,tag:vm9Z35bVW3kGMcYloke7yQ==,type:str]
MAILMAN_DOMAIN=ENC[AES256_GCM,data:FVLyIjHtFT2NKK8loXFYLGw=,iv:OokJh0fLW3uq6j8LPmb6WigO7arbKtCcdiPBSvkRMx0=,tag:9Lsvwt5hIhTyriBvWoDbzQ==,type:str]
MAILMAN_ADMIN_USER=ENC[AES256_GCM,data:/ZPGitc9PQ==,iv:EHv/oG5wJmoovB20Tk+LA2R7tgxtB5LLr6E6GdVvj28=,tag:iDFxypfHtJ61iakQ3qbTAQ==,type:str]
MAILMAN_ADMIN_EMAIL=ENC[AES256_GCM,data:zgNzoeiDf+3WLZh1izd5yfWHkA==,iv:82d+1KtK6Ui3UDD0wo0/PWQOa1/kyhT/hpfFTBjHRuA=,tag:kG0+wkMg8feoA9tq9KTbFg==,type:str]
### Live
STRIPE_PUBLIC_KEY=ENC[AES256_GCM,data:GA6S+Cq+5WrN92PQ378huXNsvtM7WPpIothj4R0xDTv+5gOotPwAszzxa7CVYNnnu1zXFDMWTsl/4gcg0GZXTxfhLmVZzis2sDjm68u4df22XJL1NVpqUkpqfpXpzOWbViQVAZ+zsaI5dr0=,iv:XeeyTTjWsdnlqbXvPUKXJ71hYP1sgvyIuk/b3fnsguc=,tag:aVpUsfllP6Zlq6Rcmi5EvA==,type:str]
THANKS_URL=ENC[AES256_GCM,data:3ut6yPvE6xtRlWPt715tyRDfFjV5+9pLmOpz4t0cAzWP,iv:OCMnWWdooB9tlT7dQTp57atiOK6JpANTUxH8+oQkjGg=,tag:XrlBySbPqrPFhfxQgyUv6g==,type:str]
SUBSCRIPTION_PORTAL_URL=ENC[AES256_GCM,data:3lQfLjg3gtDi3NtcqlkzCqgtML60iQ5f/aFmsP17i7QsOn1s1mnDenRHsYJkJ9Pqcj4/qRA=,iv:NEsOvq7tVImqIpcEaPvFyr6akN6db8HEZ0+We4Wqq00=,tag:z9Xt+jfe6xVU6rtXMGyTCQ==,type:str]
DAINAVA_URL=ENC[AES256_GCM,data:BcFIhqJp9ucysFDDEYuiVAwBNOo=,iv:GgH3KJ3iY1okrxzHAXfiCo5ZmDbMZKQgTQkxS40tqX0=,tag:6djifhD0Bm2VElKS5m9h6A==,type:str]
DAINAVA_WAYS_TO_DONATE_URL=ENC[AES256_GCM,data:HAi2g4ytkfBzUQnwd2L5mrlZINjXXb3BEOnCKRWcpXKbbmxYWio=,iv:3V7BuOx1oTGHqfsRcNA4OgN4YRUbeF/yqYiKvxaPFrk=,tag:kVHYmn0KWhxA1jtckUJRzg==,type:str]
SECRET_SEC_STRIPE_KEY=ENC[AES256_GCM,data:YCBtz/sFGcrWbISl+8HYNO8aD4HvFytoxr9lVyCo4nmbvBFbkkB+NGUp4TSevUUg/v2x17c+NcNbwjcz9BDrmN1YNAHcGpA/DqBx2Fyy15prJ6jC9eDenFUGIb4aPIBH9/WrujlwbxTKVmo=,iv:OxCWh7x5JRirAErHxEoOLM1e7sq1LPXMn5b+WCj2pPM=,tag:CshI/daTR3WCDor9e3oqEg==,type:str]
SECRET_PRICE_2=ENC[AES256_GCM,data:9AQV9T/4fmBWrNaeNtb2ew1qW1wgyItzXQJ99OMZ,iv:oSpya1t4LPZ0DOyvYJ5lcX1N8p1PcIvvf0/UuY8Zkns=,tag:Xeh6mCo79XPH8CMIe6hufw==,type:str]
SECRET_PRICE_5=ENC[AES256_GCM,data:vBnhYuse6AS0XQlvfK/SWGBhjOxyEeP6tHNyembO,iv:d4n3OiFQaIbM8GvvHAumUZ8O8dnnHey79SPvALS1ZW0=,tag:dayarUHMmHTIB9oQggNXTg==,type:str]
SECRET_PRICE_10=ENC[AES256_GCM,data:KnWw7rNufL/oqyLedVvgyCfVb4F/2BG0+Hai3+tU,iv:tzLBUpLjTs8WDOEV5SRhKpNDddtnQWPCXIiNw28uhQE=,tag:DkeBg4GqV5urKyl/kHk8rw==,type:str]
SECRET_PRICE_25=ENC[AES256_GCM,data:99QNziJSVLMdp/eHL/YrEvEjtupr0LaAM2C69Qq/,iv:COvLRamgHXmbM1ZRwI4kCtw18tsqPo/RrON1//2yz7o=,tag:o+UVoZq4D9iviELvpFO3Yw==,type:str]
SECRET_PRICE_50=ENC[AES256_GCM,data:67duVmCEDYyoyLDy2p5g7ThfhutbgH1+w5iJcArI,iv:IUld8Z0SWnyKnfLDyyPcWGMCAQWnhFjgh4bVvbT3C8M=,tag:1nz6xuGsH03in0bsXPhPug==,type:str]
SECRET_PRICE_100=ENC[AES256_GCM,data:qxdaoE0A0K2qyvKcfXp9vAhmaMrBZ+qIS5TspOZx,iv:PeedO2X8l5kOifzHuJpHNdoBZFjjm1/qJyKQOqGp+ZU=,tag:LBz+ZjUkgG2HTUimyEvk1w==,type:str]
SECRET_PRICE_ONE_TIME=ENC[AES256_GCM,data:8rN++K1Oz7bS/eUe+j7AG2isEdQBG5LC1RUj/5X7,iv:TR9PBDtcyI4Ks70lKi6t167Q1TevIPDloWcN0s7+Nc4=,tag:YgCw+wbbQA4IkUhC6OGFnw==,type:str]
### Test 
TEST_STRIPE_PUBLIC_KEY=ENC[AES256_GCM,data:AyHGTSK4DnMDeJ7IsabH6e5YxP+PpEil+ddu46gcw6MhBi/PxqVu4KMolbm1qQfEdUbClqTzKzv6Qugr0ga4zT3l+nnlK6Vq2X2tyvrytF83sgHBi6TzE45QnJuuGgUrnx0GDWRWkbinNFA=,iv:QtiLUY4f/hP1w7ub1OYbiwLRNZTdNNbx0VODQdEb6OE=,tag:J8MS5xNWnje8BjNpppLx8A==,type:str]
TEST_THANKS_URL=ENC[AES256_GCM,data:4rNXXqOPPvk4CPfkzvZDqh6oMvfy3EPZmY3RUEscXWk/,iv:d0CeSc6F70D//jY64M39+F5525w296AONsnYqKKetX4=,tag:19lf0NX7QfbyePnE+dKsyw==,type:str]
TEST_SUBSCRIPTION_PORTAL_URL=ENC[AES256_GCM,data:JnGpgjvMI7ZfB+kEesqWTQ4v40D7c25Cc9olJV5bT6/9uXmJzTMt0mIbgH1MUd1LEgRi7igxW9BLqQ==,iv:0AHdcF1P5WljU+BDtlENkqV2eaPORq7BwCM1M7rrCKg=,tag:xFRqpuRwkXdmZR8u9YV1wg==,type:str]
TEST_DAINAVA_URL=ENC[AES256_GCM,data:/4UQdVeoon9wqjSkR039G/+WQpQ=,iv:IVN9bQ5zjEgDGB04sY9qQ2mOWOwwYyZvAFFK0VMEmhE=,tag:kXi3mCFdnhF2qs1DRad/zA==,type:str]
TEST_DAINAVA_WAYS_TO_DONATE_URL=ENC[AES256_GCM,data:8oErZEeTbdWDoAbRBHXSAV8haVU9lZ1ezSpOdosqMM2Hb0XjyvM=,iv:VkazumPP17SVGIX+CsmUPpeIQUmxfIDgzmbsVfjO6rY=,tag:Yexrq2l3W3oreYeNtepBmg==,type:str]
TEST_SECRET_SEC_STRIPE_KEY=ENC[AES256_GCM,data:OIpzzEW9FVWWAR+TkbrbAmyl2Ovj2sUTMgN2fm2+V+Zn7JckOgaVvgugm+6s1X1YH57Ju9u4QiGPmZSkX1idmrkQa6KUtH44NVsiyk867JU1vbHRIi3PtN47z/6SEj2z1epezcmZdiD9y+g=,iv:GeyCHe0Mq+BMPEqrp3aIrVpxcnZIj5JSMrnSISiBLMo=,tag:UHZloDIGB1QFBkms1BgLVw==,type:str]
TEST_SECRET_PRICE_2=ENC[AES256_GCM,data:NjgX5PilxS34og343LHdDblA3QFiQtAGn8YQLP1V,iv:1Pk0kzojtgkvCQesp3St2cpXA5Kz6r8Yfjx5iiL1/YE=,tag:MWESrK0ffFUM73Z/bZszfA==,type:str]
TEST_SECRET_PRICE_5=ENC[AES256_GCM,data:9zsXCzCqwJKloUpo7V01Ls5jftp+Qu+fW87tOh5R,iv:Ty0GIm+/wC23xz7zy5dGUtOG4WJtVCIX5OhASEu4QB8=,tag:ARDOFNo2PbWLuIBtDKshjg==,type:str]
TEST_SECRET_PRICE_10=ENC[AES256_GCM,data:kQDhxz1/+BzUwqWrJpbkNEPl/yLYPIhWRkFxebfj,iv:zTyApSMP1IIsDh651FBxkkePJigjmKylfXNgkqoVM0w=,tag:B1OWbW3o+9FmXhSIoOGiuQ==,type:str]
TEST_SECRET_PRICE_25=ENC[AES256_GCM,data:MKZjfmqnA55URno0qd1hfnuwEsDiEN82Y2AuP/Dk,iv:UUs9yIclSUKX4fWvf6P5EwjFK9qDYS4QTj4fN2xIjC8=,tag:kn4v2/LNqSwls5GEbToGBg==,type:str]
TEST_SECRET_PRICE_50=ENC[AES256_GCM,data:FB7U+ZASej2ixYGbgG90ZISZ7uDCWPnmeegmQTAA,iv:Y/vxnjTA0ZaR/OE2bxnkhL1sZY3FnryNC4pHDBpaksA=,tag:GEeAOyM8ngYKj+raTj8Jhw==,type:str]
TEST_SECRET_PRICE_100=ENC[AES256_GCM,data:TjWkKtceaK5xzXfzni1c+0Kxi1n1mzLVIyq2hA7d,iv:sM/PsvyC/QdlP3eVWHC96ndVkwgMrkBZ6akKeCZNIz0=,tag:vF+Ko9e9mBToAY0eiz17FQ==,type:str]
TEST_SECRET_PRICE_ONE_TIME=ENC[AES256_GCM,data:/3qsThOWmJB+WbYaCVEO2bZzmodevCcIscUcZpJQ,iv:6yno5rbp/ZyijuxDt6oVneTxABlNl1Ii+7E2SfflZeE=,tag:g6docSDqZ6CW6IzIRLO1iA==,type:str]
### Donation sites
DONATE_DOMAIN=ENC[AES256_GCM,data:baeFOBInpEHQF26YXRPIVDQo,iv:Ju19/BtNdFF4VuFPZbsE4Id4Zl8YZ3HRCC+Qgnoj404=,tag:Hoy547PdYEXJINxyt77Vpw==,type:str]
TEST_DONATE_DOMAIN=ENC[AES256_GCM,data:2cDdZlm0FyMs+qgW42XLN7i4x9RvOD4=,iv:kEBwEIcTJL0LMEhJNilWzGmT/r3T6drboaulajxLNNk=,tag:KRjWSencr1x1Av1WVgdmcg==,type:str]
sops_age__list_0__map_enc=-----BEGIN AGE ENCRYPTED FILE-----\nYWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBRTlVza1Zlemt3c2daMllT\nL2lRVWYyNE1aUTE1M1QzSlRNSlZLM0JGKzNVCjBLeEI2U2sydldWMmlIZ3ZOK2xV\nUXBFL1NocDdwa0twSDNYdDE0cGIzMzQKLS0tIGtlTDlBdzEyanpmZm0yNW5PdDZr\nTFFJNTBCeU5PKzFRUkhUNStmTTluL2cK7K7xTrcBkA/8Y5tg8ZK06Zzw21qKeDRt\n+mQJyZ73F3tCYzrVluVF6IDhe7fo3TmrO7kqQPCk6YbnJJ72+qJHkA==\n-----END AGE ENCRYPTED FILE-----\n
sops_age__list_0__map_recipient=age1ur3v82zshy5ehk3nrwr85e640ppzjemtrl82ylgyt2hwchwaa4jqk04vw4
sops_encrypted_regex=^.*(SECRET|USER|PASS|NAME|PASSPHRASE|DB|URL|EMAIL|DOMAIN|KEY|CONTACT).*$
sops_lastmodified=2025-02-05T04:02:42Z
sops_mac=ENC[AES256_GCM,data:CcGVnmhZumOg32zPY15dXDMXvQZ5KI8aDPQH6cnfYjrnRx3ns4Vjzv17dVXj+/YOY/ScdYwM2IMJGKvrmh7lVc490UBjzY/zp7e5Oe+LfocI2kPGAGSWYzvHBwkQuy148Y5OCCD1m/gljFz5foCYnI25SAjcW9FF38WNg7YyCCo=,iv:3rz32GnaH6j2bXTdyKuhTLpDgTyQGlt20DhpY8i9fCs=,tag:oD/Qf1xAVF7C4JaGs5sJSQ==,type:str]
sops_version=3.9.4
